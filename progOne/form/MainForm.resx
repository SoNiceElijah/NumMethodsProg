<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhwgAmAIMAAP///wAAAHZ2diIiIlRUVDIyMkRERJiYmLq6utzc3BAQEGZmZu7u7qqqqszMzIiI
        iCH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAAAACwAAAAAwgAmAAAI/wABCBxIsKBBAAkIJDjIsKHDhxAj
        SpxIsaLFixgBODCgYCADAQMCEGiQsaTJkyhTqpzYgEDBAi5XypxJs6ZNAAsOFAyg86bPn0CDEhywcCCC
        AEWFKl3KtOKDBw0adCQoYGrTq1izAjDQk0DMgQUWaB1L9ueBAgMJ9BTIIADJsnDjplSwVkFSAA0CMJDL
        t2/FBEgFOrAqcMEAv4gTN3QQYOADAwAQDBwgVrHlywr2JiggAEBPwG8vY2WwluGBvYgRCIia8AGDjwUC
        cBWNtbJDBrabghTZGe7uBQIWEFiAmu3ukSmrBljggOCBAAVCF/wYErnAB80HNnhw4IFkow9mUv8XKd1g
        Ach8DeQGaf5rygeNp+dmCPMlQQToARTILhAtzfoP8STUAd9B5BZBefEnkIAr5VXcdRExKNABpRkQ2gHu
        QUWThAwddZdPBEZ01IMEEBZZYCsxpiACCnaIokAG3BUAfwgQ5oB7KXn4UFVKhQiRAP4VpkCLPMrUVmgM
        hPejiYQBlhRjD5qIUpEOhdVjgVWOhGEBSr40X0oB9AZAlw9ZSZCNLzIm40xmNnTklRHyl5NBbzYknFd4
        5ilmewKxGFGdAiVw2EBqEvoiAAM8ONCdeerp5oGCcUemgwUVFcClmGaqqaYHMUpAATDhuadR8U1YqnZ6
        0fQpAElKROlAghL/BBiNqU6mqEmv6jfhWoYV5ECLMvnoEJAELXBqYYPOxOOoDvVKEAMmBlCgVAVJaZKz
        kcW00WTzfRkslgwNsGcByXL7kKeNEsDsQM8dAGxDlBlk4mzX4WgtTuk6Gq5tD8SUwFSA4kQmTcIy1BaW
        5yH0HWg1HTUwQgTcynBBMd6XXwF33bjSxGNWBhgAQPImAEe12lSwQSFbF1kB3bEaMr1GBknQYKXBJltp
        nuG83QELgKshSjbT269g90aU0IcVnUybdhMxkB9EMtOEX59PU7RR0RLdurRA5e34rkEI4PzfdWKzhOPW
        KLlWkbfyAeWAAAesO9GcaDdoEWkPnUYbUXX3Zy3XU1FZ1UDcCAyukN+IB0WvV30u9C9JQyYuuclBqsV1
        n1hPrrlJdA1kV0ECnL356CU5SbR5ZZOuekWMOQZZgW0VBe7qtEeUGUKceVajZ/E5gHTtwHe4WgOtMeDA
        Ag040MBqsweveUAAOw==
</value>
  </data>
</root>